% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_serosurvey.R
\name{simulate_serosurvey_general_model}
\alias{simulate_serosurvey_general_model}
\title{Simulate serosurvey data based on general serocatalytic model.}
\usage{
simulate_serosurvey_general_model(
  construct_A_fn,
  calculate_seropositivity_function,
  initial_conditions,
  survey_features,
  ...
)
}
\arguments{
\item{construct_A_fn}{A function that constructs a matrix that defines the
multiplier term in the linear ODE system.}

\item{calculate_seropositivity_function}{A function which takes the state
vector and returns the seropositive fraction.}

\item{initial_conditions}{The initial state vector proportions for each
birth cohort.}

\item{survey_features}{A dataframe containing information about the binned
age groups and sample sizes for each.
It should contain columns: \link{'age_min', 'age_max', 'n_sample'}.}

\item{...}{Additional parameters for \link{sum_of_A}}
}
\value{
A dataframe with simulated serosurvey data, including age group
information, overall sample sizes, the number of seropositive individuals,
and other survey features.
}
\description{
This simulation method assumes only that the model system can be written as
a piecewise-linear ordinary differential equation system.
}
\examples{
# define survey features
n_sample <- 15
max_age <- 80

survey_features <- data.frame(
  age_min = seq(1, max_age, 1),
  age_max = seq(1, max_age, 1),
  n_sample = rep(n_sample, max_age)
)

foi_df_time <- data.frame(
  year = seq(1946, 2025, 1),
  foi = c(rep(0, 40), rep(1, 40))
)

foi_df_age <- data.frame(
  age = 1:80,
  foi = 2 * dlnorm(1:80, meanlog = 3.5, sdlog = 0.5)
)

# use same age- and time-specific multipliers
u <- foi_df_age$foi
v <- foi_df_time$foi

# function to construct A matrix for one piece
construct_A <- function(t, tau, u, v) {
  u_bar <- u[t - tau]
  v_bar <- v[t]

  A <- diag(-1, ncol = 12, nrow = 12)
  A[row(A) == (col(A) + 1)] <- 1
  A[1, 1] <- -u_bar * v_bar
  A[2, 1] <- u_bar * v_bar
  A[12, 12] <- 0

  A
}

# determines the sum of seropositive compartments of those still alive
calculate_seropositivity_fn <- function(Y) {
  sum(Y[2:11]) / (1 - Y[12])
}

# initial conditions in 12D state vector
initial_conditions <- rep(0, 12)
initial_conditions[1] <- 1

# simnulate serosurvey assuming the above model
serosurvey <- simulate_serosurvey_general_model(
  construct_A,
  calculate_seropositivity_fn,
  initial_conditions,
  survey_features,
  u,
  v
)
}
